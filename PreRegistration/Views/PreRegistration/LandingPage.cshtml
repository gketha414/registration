@model PreRegistration.Models.ViewModels.PatientViewModel
@{
    ViewBag.Title = "LandingPage";
    //  Layout = @Model.GetLayout();
}
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.js"
    integrity="sha256-yE5LLp5HSQ/z+hJeCqkz9hdjNkk1jaiGG0tDCraumnA="
    crossorigin="anonymous"></script>*@
@*<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <link rel="stylesheet" href="https://www.jqwidgets.com/public/jqwidgets/styles/jqx.base.css" type="text/css" />
    <link rel="stylesheet" href="https://www.jqwidgets.com/public/jqwidgets/styles/jqx.energyblue.css" type="text/css" />
    <script type="text/javascript" src="https://www.jqwidgets.com/public/jqwidgets/jqx-all.js"></script>
    <script type="text/javascript" src="https://www.jqwidgets.com/public/jqwidgets/globalization/globalize.js"></script>
    <link rel="stylesheet" href="https://www.jqwidgets.com/public/jqwidgets/styles/jqx.arctic.css" type="text/css" />*@
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.inputmask/3.3.4/jquery.inputmask.bundle.min.js"></script>
<script src="https://unpkg.com/jquery-input-mask-phone-number@1.0.0/dist/jquery-input-mask-phone-number.js"></script>

<script src="~/Scripts/jquery.maskedinput.min.js"></script>
<script src="~/Scripts/jquery.maskssn.js"></script>

@*<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.mask/1.14.16/jquery.mask.min.js"></script>*@
@*<script src="https://raw.githubusercontent.com/digitalBush/jquery.maskedinput/master/src/jquery.maskedinput.js" type="text/javascript"></script>*@
<style>
    .maroonLists {
        color: maroon;
        font-weight: bold;
    }

    #submitted_filter {
        display: none;
    }

    .dataTables_length {
        margin: 10px !important;
    }

    a {
        font-weight: 600;
    }

    body {
        margin-top: 30px;
    }

    .stepwizard-step p {
        margin-top: 0px;
        color: #666;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        /*opacity: 1 !important;
    filter: alpha(opacity=100) !important;*/
    }

    .stepwizard .btn.disabled, .stepwizard .btn[disabled], .stepwizard fieldset[disabled] .btn {
        opacity: 1 !important;
        color: #bbb;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-index: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .btn-circle {
        width: 30px;
        height: 30px;
        text-align: center;
        padding: 6px 0;
        font-size: 12px;
        line-height: 1.428571429;
        border-radius: 15px;
    }

    .btn1, .btn1-large {
        text-decoration: none;
        color: #fff;
        font-weight: 700 !important;
        font-style: normal !important;
        background-color: #2196f3;
        text-align: center;
        letter-spacing: .5px;
        transition: .2s ease-out;
        cursor: pointer;
    }

    .btn1, .btn1-large, .btn-floating, .btn1-large, .btn1-flat {
        font-size: 13px;
        outline: 0;
    }

    .btn1, .btn-large1, .btn1-flat {
        border: none;
        border-radius: 2px !important;
        display: inline-block;
        height: 28px !important;
        line-height: 28px !important;
        padding: 0 8px !important;
        text-transform: uppercase !important;
        vertical-align: middle !important;
        -webkit-tap-highlight-color: transparent;
    }

    .btn1, .btn1-large {
        min-width: 120px;
    }

    .col-xs-6_right {
        width: 45%;
        /*text-align: right;
        float: left;*/
        padding-right: 10px;
    }

    fieldset.group {
        margin: 0;
        padding: 0;
        margin-bottom: 1.25em;
        padding: .125em;
    }

        fieldset.group legend {
            margin: 0;
            padding: 0;
            font-weight: bold;
            margin-left: 20px;
            font-size: 100%;
            color: black;
        }

    .stepwizard-step a.disableButton {
        pointer-events: none;
        opacity: 0.5;
        cursor: not-allowed;
    }

    .stepwizard-step {
        pointer-events: auto;
        opacity: 1;
        cursor: pointer;
    }
</style>
<br />
<br />
<br />
<br />

<div class="container1">
    <div class="stepwizard">
        <div class="stepwizard-row setup-panel">
            <div class="stepwizard-step col-xs-1"></div>
            <div class="stepwizard-step col-xs-1"></div>
            <div class="stepwizard-step col-xs-1">
                <a href="#patient" type="button" id="patientStep" class="btn btn-success btn-circle">1</a>
                <p><small>Patient Information</small></p>
            </div>

            <div class="stepwizard-step col-xs-1">
                <a href="#spouse" type="button" id="spouseStep" class="btn btn-default btn-circle disableButton">2</a>
                <p><small>Spouse Information</small></p>
            </div>
            <div class="stepwizard-step col-xs-1">
                <a href="#minor" type="button" id="minorStep" class="btn btn-default btn-circle disableButton">3</a>
                <p><small>Minor Information</small></p>
            </div>
            <div class="stepwizard-step col-xs-1">
                <a href="#emergency" type="button" id="emergencyStep" class="btn btn-default btn-circle disableButton">4</a>
                <p><small>Emergency Contact Information</small></p>
            </div>
            <div class="stepwizard-step col-xs-1">
                <a href="#insurance" type="button" id="insuranceStep" class="btn btn-default btn-circle disableButton">5</a>
                <p><small>Insurance Information</small></p>
            </div>
            <div class="stepwizard-step col-xs-1">
                <a href="#accident" type="button" id="accidentStep" class="btn btn-default btn-circle disableButton">6</a>
                <p><small>Accident Information</small></p>
            </div>
            <div class="stepwizard-step col-xs-1">
                <a href="#step-7" type="button" id="verifyStep" class="btn btn-default btn-circle disableButton">7</a>
                <p><small>Verify Information</small></p>
            </div>
            <div class="stepwizard-step col-xs-1"></div>
            <div class="stepwizard-step col-xs-1"></div>
        </div>
    </div>

    <form role="form" id="myForm">
        @*//Patient Information1*@
        <div class="panel panel-primary setup-content" id="patient">
            <div class="panel-heading">
                <h3 class="panel-title">Patient Information</h3>
            </div>
            <div class="panel-body">
                @*<div class="form-group">*@
                <div class="row">
                    <div class="form-group col-md-4" id="divHospitalId">
                        @Html.LabelFor(m => m.PatientDemographicsViewModel.HospitalID, new { @class = "formScreeningInfo required control-label" })
                        @Html.DropDownListFor(x => Model.PatientDemographicsViewModel.HospitalID, new SelectList(Model.Hospitals, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "hospitalId" })
                    </div>
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(m => m.PatientDemographicsViewModel.In_Hospital_Directory, new { @class = "formScreeningInfo" })
                        <div>
                            @for (int i = 0; i < Model.YesNo.Count; i++)
                            {
                                <span>
                                    @Model.YesNo[i]
                                    @Html.RadioButtonFor(m => m.PatientDemographicsViewModel.In_Hospital_Directory, @Model.YesNo[i]) &nbsp;
                                </span>
                            }
                        </div>
                    </div>
                    <div class="form-group col-lg-4" id="divHS">
                        @Html.LabelFor(m => m.PatientDemographicsViewModel.HospitalService, new { @class = "formScreeningInfo required" })
                        <div>
                            @for (int i = 0; i < Model.HospitalService.Count; i++)
                            {
                                <span>
                                    @Model.HospitalService[i]
                                    @Html.RadioButtonFor(m => m.PatientDemographicsViewModel.HospitalService, @Model.HospitalService[i]) &nbsp;
                                </span>
                            }
                        </div>
                        <div id="divHSOther" style="display:none">
                            @Html.TextBoxFor(m => m.PatientDemographicsViewModel.HospitalServiceOther, new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                @*</div>*@
                <div class="row">

                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.PatientDemographicsViewModel.PrimaryCarePhys, new { @class = "formScreeningInfo required" })
                        @Html.TextBoxFor(m => m.PatientDemographicsViewModel.PrimaryCarePhys, new { @class = "form-control requiredField", required = "required" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.PatientDemographicsViewModel.AdmitDate, new { @class = "formScreeningInfo" })
                        @Html.EditorFor(m => m.PatientDemographicsViewModel.AdmitDate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group col-lg-4">
                        @Html.LabelFor(m => m.PatientDemographicsViewModel.PatientHereBefore, new { @class = "formScreeningInfo" })
                        <div>
                            @for (int i = 0; i < Model.YesNo.Count; i++)
                            {
                                <span>
                                    @Model.YesNo[i]
                                    @Html.RadioButtonFor(m => m.PatientDemographicsViewModel.PatientHereBefore, @Model.YesNo[i]) &nbsp;
                                </span>
                            }
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.PatientDemographicsViewModel.First_Name, new { @class = "formScreeningInfo required control-label" })
                        @Html.TextBoxFor(m => m.PatientDemographicsViewModel.First_Name, new { @class = "form-control requiredField", required = "required" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.PatientDemographicsViewModel.Middle_Name, new { @class = "formScreeningInfo" })
                        @Html.EditorFor(m => m.PatientDemographicsViewModel.Middle_Name, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.PatientDemographicsViewModel.Last_Name, new { @class = "formScreeningInfo required control-label" })
                        @Html.TextBoxFor(m => m.PatientDemographicsViewModel.Last_Name, new { @class = "form-control requiredField", required = "required" })
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.PatientDemographicsViewModel.Entitlement, new { @class = "formScreeningInfo" })
                        @Html.TextBoxFor(m => m.PatientDemographicsViewModel.Entitlement, new { @class = "form-control requiredField" })
                    </div>
                    <div class="form-group col-lg-4" id="divGender">
                        @Html.LabelFor(m => m.PatientDemographicsViewModel.Gender, new { @class = "formScreeningInfo required" })
                        <div>
                            @for (int i = 0; i < Model.Gender.Count; i++)
                            {
                                <span>
                                    @Model.Gender[i]
                                    @Html.RadioButtonFor(m => m.PatientDemographicsViewModel.Gender, @Model.Gender[i]) &nbsp;
                                </span>
                            }
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.PatientDemographicsViewModel.BirthDate, new { @class = "formScreeningInfo required" })
                        @Html.EditorFor(m => m.PatientDemographicsViewModel.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.PatientDemographicsViewModel.Race, new { @class = "formScreeningInfo required control-label" })
                        @Html.DropDownListFor(x => Model.PatientDemographicsViewModel.Race, new SelectList(Model.Race, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "race" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.PatientDemographicsViewModel.Marital_Status, new { @class = "formScreeningInfo required control-label" })
                        @Html.DropDownListFor(x => Model.PatientDemographicsViewModel.Marital_Status, new SelectList(Model.MaritalStatus, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "maritalstatus" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.PatientDemographicsViewModel.SSN, new { @class = "formScreeningInfo control-label" })
                        @Html.TextBoxFor(m => m.PatientDemographicsViewModel.SSN, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 999-99-9999)" })
                    </div>
                </div>


                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Permanent Street Address</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.Address1, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.Address1, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.Address2, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.Address2, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.City, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.City, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.StateProvince, new { @class = "formScreeningInfo control-label" })
                                    @Html.DropDownListFor(x => Model.PatientDemographicsViewModel.StateProvince, new SelectList(Model.States, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "hospitalId" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.ZipCode, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.ZipCode, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 99999-9999, or 99999 and leave 4 digit zip code extension blank)" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>


                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Contact Info</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-3">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.Home_Phone, new { @class = "formScreeningInfo control-label required" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.Home_Phone, new { @class = "form-control requiredField", @placeholder = "(Enter Area Code, Exchange & Number)" })
                                </div>
                                <div class="form-group col-md-3">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.Cell_Phone, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.Cell_Phone, new { @class = "form-control requiredField", @placeholder = "(Enter Area Code, Exchange & Number)" })
                                </div>
                                <div class="form-group col-md-3">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.Email_Address, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.Email_Address, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-3">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.Church_Choice, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.Church_Choice, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>

                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Guarantor Required</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-lg-6" id="PatientDemographics">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.ResponsiblePartyID, new { @class = "formScreeningInfo required" })
                                    <div>
                                        @for (int i = 0; i < Model.Guarantors.Count; i++)
                                        {
                                            <span>
                                                @Model.Guarantors[i].Text
                                                @Html.RadioButtonFor(m => m.PatientDemographicsViewModel.ResponsiblePartyID, @Model.Guarantors[i].Value) &nbsp;
                                            </span>
                                        }
                                    </div>
                                </div>
                                <div class="form-group col-md-6" id="divGuarNameIfOther" style="display:none">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.GuarNameIfOther, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.GuarNameIfOther, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>

                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Patient Billing Address</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.Bill_Address1, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.Bill_Address1, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.Bill_Address2, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.Bill_Address2, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.Bill_City, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.Bill_City, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.Bill_State, new { @class = "formScreeningInfo control-label" })
                                    @Html.DropDownListFor(x => Model.PatientDemographicsViewModel.Bill_State, new SelectList(Model.States, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "hospitalId" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.Bill_ZipCode, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.Bill_ZipCode, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 99999-9999, or 99999 and leave 4 digit zip code extension blank)" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>

                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Patient Mailing Address</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.Mailing_Address1, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.Mailing_Address1, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.Mailing_Address2, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.Mailing_Address2, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.MailingCity, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.MailingCity, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.MailingState, new { @class = "formScreeningInfo control-label" })
                                    @Html.DropDownListFor(x => Model.PatientDemographicsViewModel.MailingState, new SelectList(Model.States, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "hospitalId" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.MailingZip, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.MailingZip, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 99999-9999, or 99999 and leave 4 digit zip code extension blank)" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>

                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Patient 911 Address</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.E911Address1, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.E911Address1, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.E911Address2, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.E911Address2, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.E911City, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.E911City, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.E911State, new { @class = "formScreeningInfo control-label" })
                                    @Html.DropDownListFor(x => Model.PatientDemographicsViewModel.E911State, new SelectList(Model.States, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "hospitalId" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.E911Zip, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.E911Zip, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 99999-9999, or 99999 and leave 4 digit zip code extension blank)" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>

                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Patient Employer Section</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.Employer, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.Employer, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.Job_Title, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.Job_Title, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.EmployerPhone, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.EmployerPhone, new { @class = "form-control requiredField", @placeholder = "(Enter Area Code, Exchange & Number)" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.EmployerAddress1, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.EmployerAddress1, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.EmployerAddress2, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.EmployerAddress2, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.EmployerCity, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.EmployerCity, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.EmployerState, new { @class = "formScreeningInfo control-label" })
                                    @Html.DropDownListFor(x => Model.PatientDemographicsViewModel.EmployerState, new SelectList(Model.States, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "hospitalId" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.PatientDemographicsViewModel.EmployerZip, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.PatientDemographicsViewModel.EmployerZip, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 99999-9999, or 99999 and leave 4 digit zip code extension blank)" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>

                <div class="row">
                    <div class="col-xs-12">
                        <div id="step1Errors" style="color: red; font-weight: bold;">

                        </div>
                    </div>
                    <div class="alert alert-danger" style="display:none" id="errorAlert">
                        <strong>Something went wrong!</strong> Your record was not able to save.
                        <div id="ErrorMessage"></div>
                    </div>
                </div>

                @*<div class="form-group">
                        <label class="control-label">Last Name</label>
                        <input maxlength="100" type="text" required="required" class="form-control" placeholder="Enter Last Name" />
                    </div>*@
                <button class="btn1 btn-lg nextBtn pull-right" type="button" id="patientStep" onclick="onPatientClick()">Next</button>
            </div>
        </div>
        @*//Spuse information*@
        <div class="panel panel-primary setup-content" id="spouse">
            <div class="panel-heading">
                <h3 class="panel-title">Spouse Information</h3>
            </div>
            <div class="panel-body">

                <div class="row">
                    <div class="form-group col-md-4">
                    </div>
                    <div class="form-group col-lg-4">
                        <input data-val="true" id="notmarried" name="notmarried" type="checkbox" value="true">
                        &nbsp;<label for="AllExceptions_Permissible">Not Applicable - Click Here If You Are Not Married</label>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.SpouseInformation.First_Name, new { @class = "formScreeningInfo required control-label" })
                        @Html.TextBoxFor(m => m.SpouseInformation.First_Name, new { @class = "form-control requiredField", required = "required" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.SpouseInformation.Middle_Name, new { @class = "formScreeningInfo" })
                        @Html.EditorFor(m => m.SpouseInformation.Middle_Name, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.SpouseInformation.Last_Name, new { @class = "formScreeningInfo required control-label" })
                        @Html.TextBoxFor(m => m.SpouseInformation.Last_Name, new { @class = "form-control requiredField", required = "required" })
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.SpouseInformation.BirthDate, new { @class = "formScreeningInfo required" })
                        @Html.EditorFor(m => m.SpouseInformation.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.SpouseInformation.Race, new { @class = "formScreeningInfo required control-label" })
                        @Html.DropDownListFor(x => Model.SpouseInformation.Race, new SelectList(Model.Race, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "spouse-race" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.SpouseInformation.Marital_Status, new { @class = "formScreeningInfo required control-label" })
                        @Html.DropDownListFor(x => Model.SpouseInformation.Marital_Status, new SelectList(Model.MaritalStatus, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "spouse-status" })
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.SpouseInformation.SSN, new { @class = "formScreeningInfo control-label" })
                        @Html.TextBoxFor(m => m.SpouseInformation.SSN, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 999-99-9999)" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.SpouseInformation.Home_Phone, new { @class = "formScreeningInfo control-label required" })
                        @Html.TextBoxFor(m => m.SpouseInformation.Home_Phone, new { @class = "form-control requiredField", @placeholder = "(Enter Area Code, Exchange & Number)" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.SpouseInformation.Cell_Phone, new { @class = "formScreeningInfo" })
                        @Html.TextBoxFor(m => m.SpouseInformation.Cell_Phone, new { @class = "form-control requiredField", @placeholder = "(Enter Area Code, Exchange & Number)" })
                    </div>
                </div>
                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Permanent Street Address</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.SpouseInformation.Address1, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.SpouseInformation.Address1, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.SpouseInformation.Address2, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.SpouseInformation.Address2, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.SpouseInformation.City, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.SpouseInformation.City, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.SpouseInformation.StateProvince, new { @class = "formScreeningInfo control-label" })
                                    @Html.DropDownListFor(x => Model.SpouseInformation.StateProvince, new SelectList(Model.States, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "hospitalId" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.SpouseInformation.ZipCode, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.SpouseInformation.ZipCode, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 99999-9999, or 99999 and leave 4 digit zip code extension blank)" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Spouse Employer Section</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.SpouseInformation.Employer, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.SpouseInformation.Employer, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.SpouseInformation.Job_Title, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.SpouseInformation.Job_Title, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.SpouseInformation.Employer_Phone, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.SpouseInformation.Employer_Phone, new { @class = "form-control requiredField", @placeholder = "(Enter Area Code, Exchange & Number)" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.SpouseInformation.EmployerAddress1, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.SpouseInformation.EmployerAddress1, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.SpouseInformation.EmployerAddress2, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.SpouseInformation.EmployerAddress2, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.SpouseInformation.EmployerCity, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.SpouseInformation.EmployerCity, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.SpouseInformation.EmployerState, new { @class = "formScreeningInfo control-label" })
                                    @Html.DropDownListFor(x => Model.SpouseInformation.EmployerState, new SelectList(Model.States, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "hospitalId" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.SpouseInformation.EmployerZip, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.SpouseInformation.EmployerZip, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 99999-9999, or 99999 and leave 4 digit zip code extension blank)" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>

                <div class="row">
                    <div class="col-xs-12">
                        <div id="spouseErrors" style="color: red; font-weight: bold;">

                        </div>
                    </div>
                    <div class="alert alert-danger" style="display:none" id="errorAlert">
                        <strong>Something went wrong!</strong> Your record was not able to save.
                        <div id="ErrorMessage"></div>
                    </div>
                </div>
                <button class="btn1 btn-primary nextBtn pull-right" onclick="onSpouseClick()" type="button">Next</button>
            </div>
        </div>

        <div class="panel panel-primary setup-content" id="minor">
            <div class="panel-heading">
                <h3 class="panel-title">Minor Information - Complete This Section Only If Patient Is A Minor</h3>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="form-group col-md-4">
                    </div>
                    <div class="form-group col-lg-6">
                        <input data-val="true" id="notMinor" name="notmarried" type="checkbox" value="true">
                        &nbsp;<label for="AllExceptions_Permissible">Not Applicable - Click Here If Patient Is Not A Minor</label>
                    </div>
                </div>
                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Minor:  Mother Section</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.First_Name, new { @class = "formScreeningInfo required control-label" })
                                    @Html.TextBoxFor(m => m.MinorInformation.First_Name, new { @class = "form-control requiredField", required = "required" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.Middle_Init, new { @class = "formScreeningInfo" })
                                    @Html.EditorFor(m => m.MinorInformation.Middle_Init, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.Last_Name, new { @class = "formScreeningInfo required control-label" })
                                    @Html.TextBoxFor(m => m.MinorInformation.Last_Name, new { @class = "form-control requiredField", required = "required" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.Race, new { @class = "formScreeningInfo required control-label" })
                                    @Html.DropDownListFor(x => Model.MinorInformation.Race, new SelectList(Model.Race, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "minor-race" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.Dob, new { @class = "formScreeningInfo required" })
                                    @Html.EditorFor(m => m.MinorInformation.Dob, new { htmlAttributes = new { @class = "form-control" } })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.Marital_Status, new { @class = "formScreeningInfo required control-label" })
                                    @Html.DropDownListFor(x => Model.MinorInformation.Marital_Status, new SelectList(Model.MaritalStatus, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "Marital-Status" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.HomePhone, new { @class = "formScreeningInfo control-label required" })
                                    @Html.TextBoxFor(m => m.MinorInformation.HomePhone, new { @class = "form-control requiredField", @placeholder = "(Enter Area Code, Exchange & Number)" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.Cell_Phone, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.MinorInformation.Cell_Phone, new { @class = "form-control requiredField", @placeholder = "(Enter Area Code, Exchange & Number)" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Permanent Street Address</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.Address1, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.MinorInformation.Address1, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.Address2, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.MinorInformation.Address2, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.City, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.MinorInformation.City, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.StateProvince, new { @class = "formScreeningInfo control-label" })
                                    @Html.DropDownListFor(x => Model.MinorInformation.StateProvince, new SelectList(Model.States, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "hospitalId" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.ZipCode, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.MinorInformation.ZipCode, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 99999-9999, or 99999 and leave 4 digit zip code extension blank)" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Minor: Mother Billing Address</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.BillAddress1, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.MinorInformation.BillAddress1, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.BillAddress2, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.MinorInformation.BillAddress2, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.BillCity, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.MinorInformation.BillCity, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.BillState, new { @class = "formScreeningInfo control-label" })
                                    @Html.DropDownListFor(x => Model.MinorInformation.BillState, new SelectList(Model.States, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "hospitalId" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.BillZip, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.MinorInformation.BillZip, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 99999-9999, or 99999 and leave 4 digit zip code extension blank)" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>

                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Minor: Mother Mailing Address</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.MailAddress1, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.MinorInformation.MailAddress1, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.MailAddress2, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.MinorInformation.MailAddress2, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.MailCity, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.MinorInformation.MailCity, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.MailState, new { @class = "formScreeningInfo control-label" })
                                    @Html.DropDownListFor(x => Model.MinorInformation.MailState, new SelectList(Model.States, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "hospitalId" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.MailZip, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.MinorInformation.MailZip, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 99999-9999, or 99999 and leave 4 digit zip code extension blank)" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Minor: Mother 911 Address</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.E911Address1, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.MinorInformation.E911Address1, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.E911Address2, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.MinorInformation.E911Address2, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.E911City, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.MinorInformation.E911City, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.E911State, new { @class = "formScreeningInfo control-label" })
                                    @Html.DropDownListFor(x => Model.MinorInformation.E911State, new SelectList(Model.States, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "hospitalId" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.E911Zip, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.MinorInformation.E911Zip, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 99999-9999, or 99999 and leave 4 digit zip code extension blank)" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>

                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Minor: Mother Employer Section</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.Employer, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.MinorInformation.Employer, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.Job_Title, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.MinorInformation.Job_Title, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.EmployerPhone, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.MinorInformation.EmployerPhone, new { @class = "form-control requiredField", @placeholder = "(Enter Area Code, Exchange & Number)" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.EmployerAddress1, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.MinorInformation.EmployerAddress1, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.EmployerAddress2, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.MinorInformation.EmployerAddress2, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.EmployerCity, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.MinorInformation.EmployerCity, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.EmployerState, new { @class = "formScreeningInfo control-label" })
                                    @Html.DropDownListFor(x => Model.MinorInformation.EmployerState, new SelectList(Model.States, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "hospitalId" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.MinorInformation.EmployerZip, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.MinorInformation.EmployerZip, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 99999-9999, or 99999 and leave 4 digit zip code extension blank)" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <div class="row">
                    <div class="col-xs-12">
                        <div id="minorErrors" style="color: red; font-weight: bold;">

                        </div>
                    </div>
                    <div class="alert alert-danger" style="display:none" id="errorAlert">
                        <strong>Something went wrong!</strong> Your record was not able to save.
                        <div id="ErrorMessage"></div>
                    </div>
                </div>
                <button class="btn1 btn-primary nextBtn pull-right" onclick="onMinorClick()" type="button">Next</button>
            </div>
        </div>

        <div class="panel panel-primary setup-content" id="emergency">
            <div class="panel-heading">
                <h3 class="panel-title">Emergency Contact Information</h3>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="form-group col-md-4">
                    </div>
                    <div class="form-group col-lg-6">
                        <input data-val="true" id="emergecny" name="emergecny" type="checkbox" value="true">
                        &nbsp;<label for="emergency">Check This Box If You Do Not Have An Emergency Contact</label>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(m => m.EmergencyContact.Nearest_Relative_Name, new { @class = "formScreeningInfo required control-label" })
                        @Html.TextBoxFor(m => m.EmergencyContact.Nearest_Relative_Name, new { @class = "form-control requiredField", required = "required" })
                    </div>
                    <div class="form-group col-md-6">
                        @Html.LabelFor(m => m.EmergencyContact.Relationship, new { @class = "formScreeningInfo" })
                        @Html.EditorFor(m => m.EmergencyContact.Relationship, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Permanent Street Address</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.EmergencyContact.Address1, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.EmergencyContact.Address1, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.EmergencyContact.Address2, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.EmergencyContact.Address2, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.EmergencyContact.City, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.EmergencyContact.City, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.EmergencyContact.StateProvince, new { @class = "formScreeningInfo control-label" })
                                    @Html.DropDownListFor(x => Model.EmergencyContact.StateProvince, new SelectList(Model.States, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "hospitalId" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.EmergencyContact.ZipCode, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.EmergencyContact.ZipCode, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 99999-9999, or 99999 and leave 4 digit zip code extension blank)" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.EmergencyContact.Contact_Phone, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.EmergencyContact.Contact_Phone, new { @class = "form-control requiredField", @placeholder = "(Enter Area Code, Exchange & Number)" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <div class="row">
                    <div class="col-xs-12">
                        <div id="emergencyErrors" style="color: red; font-weight: bold;">

                        </div>
                    </div>
                    <div class="alert alert-danger" style="display:none" id="errorAlert">
                        <strong>Something went wrong!</strong> Your record was not able to save.
                        <div id="ErrorMessages"></div>
                    </div>
                </div>
                <button class="btn1 btn-primary nextBtn pull-right" onclick="onEmergencyClick()" type="button">Next</button>

            </div>
        </div>

        <div class="panel panel-primary setup-content" id="insurance">
            <div class="panel-heading">
                <h3 class="panel-title">Insurance Information</h3>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="form-group col-md-4">
                    </div>
                    <div class="form-group col-lg-6">
                        <input data-val="true" id="insuranceCheckBox" name="insurance" type="checkbox" value="true">
                        &nbsp;<label for="insurance">Check This Box If You Do Not Have Health Insurance</label>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.InsuranceInformation.InsRank, new { @class = "formScreeningInfo required control-label" })
                        @Html.TextBoxFor(m => m.InsuranceInformation.InsRank, new { @class = "form-control requiredField", required = "required" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.InsuranceInformation.InsPlanName, new { @class = "formScreeningInfo" })
                        @Html.EditorFor(m => m.InsuranceInformation.InsPlanName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.InsuranceInformation.Subscriber_Name, new { @class = "formScreeningInfo" })
                        @Html.EditorFor(m => m.InsuranceInformation.Subscriber_Name, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.InsuranceInformation.Policy_Number, new { @class = "formScreeningInfo required control-label" })
                        @Html.TextBoxFor(m => m.InsuranceInformation.Policy_Number, new { @class = "form-control requiredField", required = "required" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.InsuranceInformation.Group_Number, new { @class = "formScreeningInfo" })
                        @Html.EditorFor(m => m.InsuranceInformation.Group_Number, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.InsuranceInformation.PlanCode, new { @class = "formScreeningInfo" })
                        @Html.EditorFor(m => m.InsuranceInformation.PlanCode, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Insurance Address</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.InsuranceInformation.InsAddress1, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.InsuranceInformation.InsAddress1, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.InsuranceInformation.InsAddress2, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.InsuranceInformation.InsAddress2, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.InsuranceInformation.InsCity, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.InsuranceInformation.InsCity, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.InsuranceInformation.InsState, new { @class = "formScreeningInfo control-label" })
                                    @Html.DropDownListFor(x => Model.InsuranceInformation.InsState, new SelectList(Model.States, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "hospitalId" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.InsuranceInformation.InsZip, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.InsuranceInformation.InsZip, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 99999-9999, or 99999 and leave 4 digit zip code extension blank)" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.InsuranceInformation.InsPhone, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.InsuranceInformation.InsPhone, new { @class = "form-control requiredField", @placeholder = "(Enter Area Code, Exchange & Number)" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <div class="row">
                    <div class="col-xs-12">
                        <div id="insuranceErrors" style="color: red; font-weight: bold;">

                        </div>
                    </div>
                    <div class="alert alert-danger" style="display:none" id="errorAlert">
                        <strong>Something went wrong!</strong> Your record was not able to save.
                        <div id="ErrorMessages"></div>
                    </div>
                </div>
                <button class="btn1 btn-primary nextBtn pull-right" onclick="onInsuranceClick()" type="button">Next</button>

            </div>
        </div>

        <div class="panel panel-primary setup-content" id="accident">
            <div class="panel-heading">
                <h3 class="panel-title">Accident Information</h3>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="form-group col-lg-12" id="divac">
                        @Html.LabelFor(m => m.AccidentDetail.AccidentTypeID, new { @class = "formScreeningInfo required" })
                        <div>
                            @for (int i = 0; i < Model.AccidentTypes.Count; i++)
                            {
                                <span>
                                    @Model.AccidentTypes[i]
                                    @Html.RadioButtonFor(m => m.AccidentDetail.AccidentTypeID, @Model.AccidentTypes[i]) &nbsp;
                                </span>
                            }
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.InsuranceInformation.InsRank, new { @class = "formScreeningInfo required control-label" })
                        @Html.TextBoxFor(m => m.InsuranceInformation.InsRank, new { @class = "form-control requiredField", required = "required", @id = "AccentInformationInsRank" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.InsuranceInformation.InsPlanName, new { @class = "formScreeningInfo" })
                        @Html.EditorFor(m => m.InsuranceInformation.InsPlanName, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.InsuranceInformation.Subscriber_Name, new { @class = "formScreeningInfo" })
                        @Html.EditorFor(m => m.InsuranceInformation.Subscriber_Name, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.InsuranceInformation.Policy_Number, new { @class = "formScreeningInfo required control-label" })
                        @Html.TextBoxFor(m => m.InsuranceInformation.Policy_Number, new { @class = "form-control requiredField", required = "required", @id = "AccentInformationPolicyNumber" })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.InsuranceInformation.Group_Number, new { @class = "formScreeningInfo" })
                        @Html.EditorFor(m => m.InsuranceInformation.Group_Number, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                    <div class="form-group col-md-4">
                        @Html.LabelFor(m => m.InsuranceInformation.PlanCode, new { @class = "formScreeningInfo" })
                        @Html.EditorFor(m => m.InsuranceInformation.PlanCode, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
                <fieldset class="scheduler-border">
                    <legend class="scheduler-border">Insurance Address</legend>
                    <div class="control-group">
                        <div class="controls">
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.InsuranceInformation.InsAddress1, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.InsuranceInformation.InsAddress1, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.InsuranceInformation.InsAddress2, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.InsuranceInformation.InsAddress2, new { @class = "form-control requiredField" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.InsuranceInformation.InsCity, new { @class = "formScreeningInfo control-label" })
                                    @Html.TextBoxFor(m => m.InsuranceInformation.InsCity, new { @class = "form-control requiredField" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.InsuranceInformation.InsState, new { @class = "formScreeningInfo control-label" })
                                    @Html.DropDownListFor(x => Model.InsuranceInformation.InsState, new SelectList(Model.States, "Value", "Text"), htmlAttributes: new { @class = "form-control", id = "hospitalId" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.InsuranceInformation.InsZip, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.InsuranceInformation.InsZip, new { @class = "form-control requiredField", @placeholder = "(Entry Format: 99999-9999, or 99999 and leave 4 digit zip code extension blank)" })
                                </div>
                                <div class="form-group col-md-4">
                                    @Html.LabelFor(m => m.InsuranceInformation.InsPhone, new { @class = "formScreeningInfo" })
                                    @Html.TextBoxFor(m => m.InsuranceInformation.InsPhone, new { @class = "form-control requiredField", @placeholder = "(Enter Area Code, Exchange & Number)" })
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <div class="row">
                    <div class="col-xs-12">
                        <div id="accidentErrors" style="color: red; font-weight: bold;">

                        </div>
                    </div>
                    <div class="alert alert-danger" style="display:none" id="errorAlert">
                        <strong>Something went wrong!</strong> Your record was not able to save.
                        <div id="ErrorMessages"></div>
                    </div>
                </div>
                <button class="btn1 btn-primary nextBtn pull-right" onclick="onAccidentClick()" type="submit">Finish!</button>
            </div>
        </div>

    </form>
</div>


<script src="~/Scripts/Register/registration.js"></script>